{% from "profile/macros/anketa.html.jinja" import anketa_tab_macro %}
{% from "profile/macros/checks.html.jinja" import check_tab_macro %}
{% from "profile/macros/poligrafs.html.jinja" import poligraf_tab_macro %}
{% from "profile/macros/investigations.html.jinja" import investigation_tab_macro %}
{% from "profile/macros/inquiries.html.jinja" import inquiry_tab_macro %}
{% from "profile/macros/photo.html.jinja" import photo_card_macro %}

{% set tabs = {
  'anketa': ['Анкета', anketa_tab_macro(person['persons']['id'], person)],
  'checks': ['Проверка', check_tab_macro(person['persons']['id'], person['checks'])],
  'poligrafs': ['Полиграф', poligraf_tab_macro(person['persons']['id'], person['poligrafs'])],
  'invesigations': ['Расследования', investigation_tab_macro(person['persons']['id'], person['invesigations'])],
  'inquiries': ['Запросы', inquiry_tab_macro(person['persons']['id'], person['inquiries'])],
} %}

{% block content %}
<div id ="photo-card" class="position-relative">
  {{ photo_card_macro(person.persons.destination, person.persons.id, person.persons.isbusy) }}
</div>

<div class="text-opacity-85 text-danger py-5 px-3">
  <h3>{{ person.persons.surname }} {{ person.persons.firstname }} {{ person.persons.patronymic if person.persons.patronymic }}
  </h3>
</div>

{% if session['user']['role'] == 'user' %}
<div class="position-relative">
  <div class="position-absolute bottom-0 end-0">
    <button id="isbusy-btn" class="btn btn-link" onclick="switchEditable()">
      <div
        class="spinner-grow spinner-grow text-{{'danger' if person.persons.isbusy else 'success'}}"
        role="status"
        title="{{'Отключить режим проверки' if person.persons.isbusy else 'Включить режим проверки'}}"
      >
    </button>
  </div>
</div>
{% endif %}

<nav>
  <div class="nav nav-tabs nav-justified d-print-none" role="tablist">
    {% for key, values in tabs.items() %}
    <button
      class="nav-link {{ 'active' if key == 'anketa' }}"
      data-bs-target="{{'#' + key}}"
      data-bs-toggle="tab"
      type="button"
      role="tab"
    >
      {{ values[0] }}
    </button>
    {% endfor %}
  </div>
</nav>
<div class="tab-content mb-3">
  {% for key, values in tabs.items() %}
  <div
    id={{key}}
    class="tab-pane fade {{ 'show active' if key   == 'anketa' }} pt-3"
    role="tabpanel"
    tabindex="0"
  >
    {{ values[1] }}
  </div>
  {% endfor %}
</div>

<script>
let isbusyBtn = document.getElementById('isbusy-btn');
let actionsDivs = document.getElementsByClassName('border-divider');
let cardBody = document.getElementById('card-body');

let isbusyStatus = isbusyBtn.children[0].classList.contains('text-danger') ? true : false;

function changeAttrs() {
  isbusyStatus 
  ? cardBody.setAttribute('class', 'card-body text-center d-flex justify-content-center') 
  : cardBody.setAttribute('class', 'card-body text-center d-flex justify-content-center d-none');

  for (let i = 0; i < actionsDivs.length; i++) {
    isbusyStatus 
    ? actionsDivs[i].setAttribute('class', 'py-1 border-top border-divider') 
    : actionsDivs[i].setAttribute('class', 'py-1 border-top border-divider d-none');
  }
};

async function switchEditable() {
  let response = await fetch("/isbusy/" + {{person['persons']['id']|string}});
  response = await response.status;
  if (response === 200) {
    isbusyStatus = !isbusyStatus;

    isbusyStatus 
    ? isbusyBtn.children[0].setAttribute('class', 'spinner-grow spinner-grow text-danger') 
    : isbusyBtn.children[0].setAttribute('class','spinner-grow spinner-grow text-success');

    isbusyBtn.children[0].setAttribute(
      'title', isbusyStatus ? 'Отключить режим проверки' : 'Включить режим проверки'
    );

    changeAttrs();
  } else {
    console.log(response.status);
  }
};  

changeAttrs();
</script>

{% endblock %}